{"version":3,"sources":["routes/About.js","components/Movies.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","length","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","console","log","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAWeA,MARf,WACE,OACE,sBAAMC,UAAU,mBAAhB,iE,0EC2CWC,MA5Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,sBAAKP,UAAU,QAAf,UACE,cAAC,IAAD,CACEQ,GAAI,CACFC,SAAS,SAAD,OAAWP,GACnBQ,MAAO,CACLP,OACAC,QACAC,UACAC,SACAC,WARN,SAYE,qBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,MAEvC,sBAAKJ,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,cAAd,SAA6BG,IAC7B,oBAAIH,UAAU,gBAAd,SACGO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBf,UAAU,eAA1B,SACGc,GADMC,WAMf,mBAAGf,UAAU,iBAAb,SACGK,EAAQW,OAAS,IAAMX,EAAQY,MAAM,EAAG,KAAO,MAAQZ,QCoBjDa,G,kNA/CbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IATzB,2C,uDAWZ,WACEQ,KAAKN,c,oBAEP,WAAU,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASpB,UAAU,YAAnB,SACGmB,EACC,qBAAKnB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,uBAGF,qBAAKA,UAAU,SAAf,SACGoB,EAAOP,KAAI,SAACe,GAAD,OACV,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GAhCR4B,IAAMC,YCgBVC,E,uKAlBb,WACEC,QAAQC,IAAIP,KAAKQ,OADC,MAEYR,KAAKQ,MAA3BC,EAFU,EAEVA,SAAUC,EAFA,EAEAA,aACKC,IAAnBF,EAAS1B,OACX2B,EAAQE,KAAK,KAEfN,QAAQC,IAAIE,EAAS1B,S,oBAEvB,WAAU,IACA0B,EAAaT,KAAKQ,MAAlBC,SACR,OAAIA,EAAS1B,MACJ,+BAAO0B,EAAS1B,MAAMN,QAEtB,S,GAdQ0B,IAAMC,WCsBZS,MArBf,WACE,OACE,gCACE,cAAC,IAAD,CAAMhC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCmDSiC,MAnDf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,cAAC,IAAD,CAAOwB,KAAK,SAASE,UAAW7C,IAChC,cAAC,IAAD,CAAO2C,KAAK,aAAaE,UAAWZ,QCP1Ca,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c22566fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../routes/About.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <span className=\"about__container\">\r\n      About this page: I built it because I love movies.\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n      </Link>\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genre__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <p className=\"movie__summary\">\r\n        {summary.length > 180 ? summary.slice(0, 180) + \"...\" : summary}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movies\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    //console.log(movies);\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n    console.log(location.state);\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n\r\n  /**\r\n   *  <Link\r\n        to={{\r\n          pathname: \"/about\",\r\n          state: {\r\n            fromNavigation: true,\r\n          },\r\n        }}\r\n      >\r\n        About\r\n      </Link>\r\n   */\r\n}\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n/*\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    count: 0,\r\n  }\r\n\r\n  add = () => {\r\n    this.setState(current => ({count: this.state.count + 1} ));\r\n  };\r\n  minus = () => {\r\n    this.setState(current => ({count: this.state.count - 1} ));\r\n  };\r\n\r\n  componentDidMount(){\r\n    console.log(\"Component rendered\");\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log(\"I just updated\");\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log(\"Goodbye, cruel World\");\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"I'm rendering\");\r\n\r\n    return (\r\n      <div>\r\n        <h1>The number is: {this.state.count}</h1>\r\n        <button onClick={this.add}>Add</button>\r\n        <button onClick={this.minus}>Minus</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n*/\r\nexport default App;\r\n\r\n//js파일을 생성하고\r\n//해당 js파일에서 import React from 'react'; 선언\r\n//component를 return 하는 함수 작성\r\n//해당함수를 export default (함수명);\r\n//App의 function App()안에 태그 작성\r\n//component는 대문자로 시작해야한다\r\n\r\n//App에 직접작성하는것도 가능\r\n//component의 props는 배열, String등 여러정보를 작성할 수있다\r\n//component를 return하는 함수의 첫번째 argument로 삽입한다\r\n//return문 안에서 중괄호로 묶어서 사용한다\r\n//첫번째 인자로 바로 {props명}을 쓸 수있고\r\n//이 경우 return문에서는 똑같이 적어줘야한다\r\n\r\n/* 2-2\r\nJSX에선 {}안에 JS를 넣는다\r\narray를 JS에서 생성하고 JS에서 map으로 반복해서 태그를 반환할 수 있다\r\n태그 내부에서 다시 {}로 JS를 사용한다 이 과정에서\r\n태그와 동명의 함수에서 argument로 적용될 props를 전달해준다.\r\n*/\r\n\r\n/* 2-3\r\n외부 함수로 제작해서 map에 넣을 수도 있다\r\n모든 react의 요소는 고유해야하고, id(key)를 넣어주는것으로 에러를 해결할 수 있다\r\n이미지엔 alt옵션이 시각장에인을 위해 존재해야한다(?)\r\n*/\r\n\r\n/* 2-4\r\nnpm i prop-types설치\r\ntype과 isRequired 체크 가능\r\n확인용 플러그인\r\n*/\r\n\r\n/* 3-0\r\nclass components는\r\nclass App extends React.Component{}와 같이 생성\r\nclass App은 React.Component를 상속한 내가아는 그 클래스가 맞다\r\nReact.Component엔 render method가 있다\r\nReact는 자동적으로 모든 class component의 render method를 실행하고자 한다\r\nstate는 component의 동적 데이터를 담을 객체다\r\nbutton에는 onClick이란 prop가 기본적으로 있다(React)\r\n}\r\n*/\r\n\r\n/* 3-1\r\nstate는 직접변경해서는 안되고, setState를 써야한다\r\nreact의 render function의 refresh와 관련있다\r\nreact의 외부상태에 의존하지 않는방법으로 current화살표함수가 있다(?) 나중에 뭔소린지 알아보자 state를 set할 때의 기준이다\r\nsetState를 호출할 때마다\r\nreact는 새로운 state로\r\nrender function을 호출한다\r\n*/\r\n\r\n/* 3-2\r\ncomponent의 lifecycle에는 관련된 함수가 있다\r\nMounting은 태어나는것이다\r\nUpdating은 업데이트다\r\nUnmounting은 component의 죽음을 의미한다\r\n\r\ncomponentDidMount method는 최초 렌더링 때 사용\r\ncomponentDidUpdate method는 업데이트 할 때\r\n*/\r\n\r\n/* 4-0\r\nasync는 비동기선언\r\nawait대기선언\r\nasync가 있어야 await사용가능\r\nfunction을 javascript더러 기다리라고 해야함\r\n*/\r\n\r\n/* 4-1\r\nclass component안에 function component를 불러왔다\r\n외부파일로 영화관련된 JSX를 빼놨다.\r\n여전히 props엔 key가 필요하더라.\r\n*/\r\n\r\n/* 4-2\r\nimg에 props에 alt와 title을 넣어주는 이유는\r\n마우스를 위에 올렸을 때에 제목이 뜨게 하기 위해서이다\r\nimport \"./파일명.css\"를 통해 css를 삽입가능\r\nJSX에서 style prop을 이용해 style={{내용}}으로 직접사용가능\r\n*/\r\n\r\n/* 4-3\r\nmap에게는 iten number에 해당하는 index argument가 존재\r\n*/\r\n\r\n/* 6-1\r\n라우터는\r\n/이하에 같은 경로의 모든 컴포넌트를 같이 랜더링해버린다\r\nexact는 정확한 경로가 아니면 렌더링 하지 않는다는 뜻으로\r\n위의 문제를 해결해준다\r\n*/\r\n\r\n/* 6-2\r\nhref로 이동시 강제로 리액트를 죽이고 새로고침한다\r\nreact-route-dom에서 {Link}를 import하고\r\nLink tag를 사용해야한다 href대신 to를 쓴다\r\nLink는 route밖에서 쓸 수 없다\r\nBrowserRouter는 해시태그가 없다 깃에넣기 힘들다\r\n노마드코더는 Link를 쓰기전에 Navigation tag를 js로 따로빼줬다\r\n*/\r\n\r\n/* 6-3\r\nreact의 모든 route들은 props를 가진다(기본옵션)\r\nLink의 to는 string으로 대체가능하다\r\nobject로도 가능하며, 더 많은 정보를 담을 수 있다(pathname, state...)\r\n\r\n*/\r\n\r\n/* 6-4\r\nstate Link로 안보내고 그냥 url로 가면 undefined가 된다\r\n이걸 if문으로 잡아서 history.push(\"/\");를 적어둔다\r\n적어두면 자동으로 리다이렉트가 된다\r\n*/\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n*/\r\n\r\n\r\n//component는 HTML을 반환하는 함수"],"sourceRoot":""}